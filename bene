{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "healthcare_fraud.ipynb",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/areias/healthcare_fraud/blob/main/bene\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Oy4uEqaDTemV"
      },
      "source": [
        "## Healthcare Fraud Detection\n",
        "\n",
        "<br>\n",
        "\n",
        "### Potential Analysis Plan (let's build on this iteratively)\n",
        "* data: https://www.kaggle.com/rohitrox/healthcare-provider-fraud-detection-analysis\n",
        "* first steps, data exploration and summary stats of data\n",
        "* modeling: it's a binary classification problem, let's maybe try a logistic regression on it as a baseline from scikit-learn\n",
        "    * https://scikit-learn.org/stable/getting_started.html\n",
        "    * https://scikit-learn.org/stable/tutorial/index.html#tutorial-menu\n",
        "    * https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression\n",
        "\n",
        "* Graph analysis: create a schema to upload to neo4j as a graph database\n",
        "* modeling plus: try graph machine learning models on it \n",
        "* experiment tracking https://wandb.ai/ and integrating with scikit-learn https://docs.wandb.ai/guides/integrations/scikit\n",
        "* Because only 10% of records are fraudulent we could try some imbalanced data\n",
        "processing methods such as oversampling \n",
        "\n",
        "<br>\n",
        "\n",
        "### Other potentially useful information\n",
        "* This document describes a dataset very similar to this one so I think we can assume that the diagnosis codes are the same ICD-9 and the \n",
        "* https://www.hipaaspace.com/Medical_Billing/Coding/ICD-9/Diagnosis/2768\n",
        "* the variables  NoOfMonths_PartACov and NoOfMonths_PartBCov refer to the months the patient was covered by one of two Medicare programs: Fee-for-Service (FFS) Part A and Part B.\n",
        "* this paper does this for reals http://www.karlbranting.net/papers/FOSINT_Branting_et_al.pdf\n",
        "\n",
        "\n",
        "<br>\n",
        "\n",
        "### Examples of other's analysis and results so we can compare (and be better! ha)\n",
        "\n",
        "* https://kundusoumya98.medium.com/healthcare-provider-fraud-detection-and-analysis-using-machine-learning-632f7a380c79 - best F1 is 0.49\n",
        "* https://medium.com/analytics-vidhya/provider-fraud-detection-in-the-healthcare-domain-a6f76f76d8ba - best F1 is 0.65 with xgb classifier but logistic regressionhas f1 of 0.63 so not that much worse\n",
        "* https://github.com/sitathomas/Healthcare_Fraud/blob/main/Presentation_Slides.pdf - their f1 must be around 0.64 (I had to guesstimate based on their ROC curve for the Gradient boosting model)\n",
        "* https://github.com/anikmanik04/healthcare-provider-fraud-detection/blob/main/07_Final_Pipeline_CS1.ipynb - best f1 0.61 from Random Forest model\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fJstgd6tl8oa",
        "outputId": "90fda96f-2d03-48a7-ef77-5d975b3220a5"
      },
      "source": [
        "!wget https://github.com/areias/healthcare_fraud/blob/main/schema_draft_3.png"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2021-11-24 21:49:44--  https://github.com/areias/healthcare_fraud/blob/main/schema_draft_3.png\n",
            "Resolving github.com (github.com)... 52.69.186.44\n",
            "Connecting to github.com (github.com)|52.69.186.44|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: unspecified [text/html]\n",
            "Saving to: ‘schema_draft_3.png’\n",
            "\n",
            "schema_draft_3.png      [ <=>                ] 154.60K  --.-KB/s    in 0.1s    \n",
            "\n",
            "2021-11-24 21:49:45 (1.33 MB/s) - ‘schema_draft_3.png’ saved [158314]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dEpWGUr-lhFE"
      },
      "source": [
        "### Draft Neo4j Schema\n",
        "\n",
        "<img src=\"https://github.com/areias/healthcare_fraud/blob/main/schema_draft_3.png?raw=1\" height=\"600\" />\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ihTTxUZwKLFP"
      },
      "source": [
        "# Project understanding: \n",
        "Project Objectives\n",
        "Provider Fraud is one of the biggest problems facing Medicare. According to the government, the total Medicare spending increased exponentially due to frauds in Medicare claims. Healthcare fraud is an organized crime which involves peers of providers, physicians, beneficiaries acting together to make fraud claims.\n",
        "\n",
        "Rigorous analysis of Medicare data has yielded many physicians who indulge in fraud. They adopt ways in which an ambiguous diagnosis code is used to adopt costliest procedures and drugs. Insurance companies are the most vulnerable institutions impacted due to these bad practices. Due to this reason, insurance companies increased their insurance premiums and as result healthcare is becoming costly matter day by day.\n",
        "\n",
        "Healthcare fraud and abuse take many forms. Some of the most common types of frauds by providers are:\n",
        "\n",
        "a) Billing for services that were not provided.\n",
        "\n",
        "b) Duplicate submission of a claim for the same service.\n",
        "\n",
        "c) Misrepresenting the service provided.\n",
        "\n",
        "d) Charging for a more complex or expensive service than was actually provided.\n",
        "\n",
        "e) Billing for a covered service when the service actually provided was not covered.\n",
        "\n",
        "Problem Statement\n",
        "The goal of this project is to \" predict the potentially fraudulent providers \" based on the claims filed by them.along with this, we will also discover important variables helpful in detecting the behaviour of potentially fraud providers. further, we will study fraudulent patterns in the provider's claims to understand the future behaviour of providers.\n",
        "\n",
        "Introduction to the Dataset\n",
        "For the purpose of this project, we are considering Inpatient claims, Outpatient claims and Beneficiary details of each provider. Lets s see their details :\n",
        "\n",
        "A) Inpatient Data\n",
        "\n",
        "This data provides insights about the claims filed for those patients who are admitted in the hospitals. It also provides additional details like their admission and discharge dates and admit d diagnosis code.\n",
        "\n",
        "B) Outpatient Data\n",
        "\n",
        "This data provides details about the claims filed for those patients who visit hospitals and not admitted in it.\n",
        "\n",
        "C) Beneficiary Details Data\n",
        "\n",
        "This data contains beneficiary KYC details like health conditions,regioregion they belong to etc."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "U7FgrGIzTdaP"
      },
      "source": [
        "import pandas as pd\n",
        "import seaborn as sns"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t5OJXvasKe87"
      },
      "source": [
        "train_ben=pd.read_csv('Train_Beneficiarydata-1542865627584.csv')\n",
        "test_ben=pd.read_csv('Test_Beneficiarydata-1542969243754.csv')\n",
        "train_in=pd.read_csv('Train_Inpatientdata-1542865627584.csv')\n",
        "train_out=pd.read_csv('Train_Outpatientdata-1542865627584.csv', engine='python')\n",
        "train=pd.read_csv('Train-1542865627584.csv')"
      ],
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "m7zpAQQKQrcb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "843a7333-a135-45a6-befb-7e23ab50afee"
      },
      "source": [
        "train.head()"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-ad7b4e01-d816-4fb6-a246-430cdfcc41be\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>PRV51004</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PRV51005</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PRV51007</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad7b4e01-d816-4fb6-a246-430cdfcc41be')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-ad7b4e01-d816-4fb6-a246-430cdfcc41be button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-ad7b4e01-d816-4fb6-a246-430cdfcc41be');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   Provider PotentialFraud\n",
              "0  PRV51001             No\n",
              "1  PRV51003            Yes\n",
              "2  PRV51004             No\n",
              "3  PRV51005            Yes\n",
              "4  PRV51007             No"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0pnX3lxDWkTX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d7c26c66-9d06-4337-d478-56bfd3840e8d"
      },
      "source": [
        "train.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5410, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "u5gzYtjUT1Z9"
      },
      "source": [
        "**Checking for unbalanced data:**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jrY-OyUUQrfa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bff837b9-806d-4eac-b210-145dbadf0471"
      },
      "source": [
        "train.PotentialFraud.unique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['No', 'Yes'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8PFrprWqSxWN",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6f4e3b15-a7ad-4e56-c8df-db53a42c8417"
      },
      "source": [
        "train['PotentialFraud'].value_counts(normalize=True)*100"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No     90.64695\n",
              "Yes     9.35305\n",
              "Name: PotentialFraud, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "s_QzBdjxVHwh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e2a1b258-e235-441a-839c-65414aa63472"
      },
      "source": [
        "train.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Provider          0\n",
              "PotentialFraud    0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6O5dCRsid3rc"
      },
      "source": [
        "## Beneficiary Dataset:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8GlNA-SyROjg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "outputId": "cc11f47f-7fb2-4c16-a678-b3e13e242d10"
      },
      "source": [
        "train_ben.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BeneID</th>\n",
              "      <th>DOB</th>\n",
              "      <th>DOD</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Race</th>\n",
              "      <th>RenalDiseaseIndicator</th>\n",
              "      <th>State</th>\n",
              "      <th>County</th>\n",
              "      <th>NoOfMonths_PartACov</th>\n",
              "      <th>NoOfMonths_PartBCov</th>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "      <th>ChronicCond_Heartfailure</th>\n",
              "      <th>ChronicCond_KidneyDisease</th>\n",
              "      <th>ChronicCond_Cancer</th>\n",
              "      <th>ChronicCond_ObstrPulmonary</th>\n",
              "      <th>ChronicCond_Depression</th>\n",
              "      <th>ChronicCond_Diabetes</th>\n",
              "      <th>ChronicCond_IschemicHeart</th>\n",
              "      <th>ChronicCond_Osteoporasis</th>\n",
              "      <th>ChronicCond_rheumatoidarthritis</th>\n",
              "      <th>ChronicCond_stroke</th>\n",
              "      <th>IPAnnualReimbursementAmt</th>\n",
              "      <th>IPAnnualDeductibleAmt</th>\n",
              "      <th>OPAnnualReimbursementAmt</th>\n",
              "      <th>OPAnnualDeductibleAmt</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BENE11001</td>\n",
              "      <td>1943-01-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>230</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>36000</td>\n",
              "      <td>3204</td>\n",
              "      <td>60</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BENE11002</td>\n",
              "      <td>1936-09-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>280</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>30</td>\n",
              "      <td>50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BENE11003</td>\n",
              "      <td>1936-08-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>52</td>\n",
              "      <td>590</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>90</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BENE11004</td>\n",
              "      <td>1922-07-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>270</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1810</td>\n",
              "      <td>760</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BENE11005</td>\n",
              "      <td>1935-09-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>24</td>\n",
              "      <td>680</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1790</td>\n",
              "      <td>1200</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      BeneID         DOB  ... OPAnnualReimbursementAmt  OPAnnualDeductibleAmt\n",
              "0  BENE11001  1943-01-01  ...                       60                     70\n",
              "1  BENE11002  1936-09-01  ...                       30                     50\n",
              "2  BENE11003  1936-08-01  ...                       90                     40\n",
              "3  BENE11004  1922-07-01  ...                     1810                    760\n",
              "4  BENE11005  1935-09-01  ...                     1790                   1200\n",
              "\n",
              "[5 rows x 25 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5MGT28RPKfAe",
        "outputId": "e73a14e4-ec60-467e-afb0-ebbb2b815ead"
      },
      "source": [
        "train_ben.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(138556, 25)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vxo8slcmSRa6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "29429932-23fc-4396-8fe9-52ffd70f6edc"
      },
      "source": [
        "test_ben.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(63968, 25)"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6M-6fWy6QrpH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3fb0187a-4efd-4461-adfb-7c89f7718afd"
      },
      "source": [
        "train_ben.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 138556 entries, 0 to 138555\n",
            "Data columns (total 25 columns):\n",
            " #   Column                           Non-Null Count   Dtype \n",
            "---  ------                           --------------   ----- \n",
            " 0   BeneID                           138556 non-null  object\n",
            " 1   DOB                              138556 non-null  object\n",
            " 2   DOD                              1421 non-null    object\n",
            " 3   Gender                           138556 non-null  int64 \n",
            " 4   Race                             138556 non-null  int64 \n",
            " 5   RenalDiseaseIndicator            138556 non-null  object\n",
            " 6   State                            138556 non-null  int64 \n",
            " 7   County                           138556 non-null  int64 \n",
            " 8   NoOfMonths_PartACov              138556 non-null  int64 \n",
            " 9   NoOfMonths_PartBCov              138556 non-null  int64 \n",
            " 10  ChronicCond_Alzheimer            138556 non-null  int64 \n",
            " 11  ChronicCond_Heartfailure         138556 non-null  int64 \n",
            " 12  ChronicCond_KidneyDisease        138556 non-null  int64 \n",
            " 13  ChronicCond_Cancer               138556 non-null  int64 \n",
            " 14  ChronicCond_ObstrPulmonary       138556 non-null  int64 \n",
            " 15  ChronicCond_Depression           138556 non-null  int64 \n",
            " 16  ChronicCond_Diabetes             138556 non-null  int64 \n",
            " 17  ChronicCond_IschemicHeart        138556 non-null  int64 \n",
            " 18  ChronicCond_Osteoporasis         138556 non-null  int64 \n",
            " 19  ChronicCond_rheumatoidarthritis  138556 non-null  int64 \n",
            " 20  ChronicCond_stroke               138556 non-null  int64 \n",
            " 21  IPAnnualReimbursementAmt         138556 non-null  int64 \n",
            " 22  IPAnnualDeductibleAmt            138556 non-null  int64 \n",
            " 23  OPAnnualReimbursementAmt         138556 non-null  int64 \n",
            " 24  OPAnnualDeductibleAmt            138556 non-null  int64 \n",
            "dtypes: int64(21), object(4)\n",
            "memory usage: 26.4+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wvrqQFZRUh3Y",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "outputId": "02a45a9f-6251-47ae-8ac6-205d0009128f"
      },
      "source": [
        "train_ben.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Race</th>\n",
              "      <th>State</th>\n",
              "      <th>County</th>\n",
              "      <th>NoOfMonths_PartACov</th>\n",
              "      <th>NoOfMonths_PartBCov</th>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "      <th>ChronicCond_Heartfailure</th>\n",
              "      <th>ChronicCond_KidneyDisease</th>\n",
              "      <th>ChronicCond_Cancer</th>\n",
              "      <th>ChronicCond_ObstrPulmonary</th>\n",
              "      <th>ChronicCond_Depression</th>\n",
              "      <th>ChronicCond_Diabetes</th>\n",
              "      <th>ChronicCond_IschemicHeart</th>\n",
              "      <th>ChronicCond_Osteoporasis</th>\n",
              "      <th>ChronicCond_rheumatoidarthritis</th>\n",
              "      <th>ChronicCond_stroke</th>\n",
              "      <th>IPAnnualReimbursementAmt</th>\n",
              "      <th>IPAnnualDeductibleAmt</th>\n",
              "      <th>OPAnnualReimbursementAmt</th>\n",
              "      <th>OPAnnualDeductibleAmt</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "      <td>138556.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.570932</td>\n",
              "      <td>1.254511</td>\n",
              "      <td>25.666734</td>\n",
              "      <td>374.424745</td>\n",
              "      <td>11.907727</td>\n",
              "      <td>11.910145</td>\n",
              "      <td>1.667817</td>\n",
              "      <td>1.506322</td>\n",
              "      <td>1.687643</td>\n",
              "      <td>1.880041</td>\n",
              "      <td>1.762847</td>\n",
              "      <td>1.644476</td>\n",
              "      <td>1.398142</td>\n",
              "      <td>1.324143</td>\n",
              "      <td>1.725317</td>\n",
              "      <td>1.743180</td>\n",
              "      <td>1.920942</td>\n",
              "      <td>3660.346502</td>\n",
              "      <td>399.847296</td>\n",
              "      <td>1298.219348</td>\n",
              "      <td>377.718258</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.494945</td>\n",
              "      <td>0.717007</td>\n",
              "      <td>15.223443</td>\n",
              "      <td>266.277581</td>\n",
              "      <td>1.032332</td>\n",
              "      <td>0.936893</td>\n",
              "      <td>0.470998</td>\n",
              "      <td>0.499962</td>\n",
              "      <td>0.463456</td>\n",
              "      <td>0.324914</td>\n",
              "      <td>0.425339</td>\n",
              "      <td>0.478674</td>\n",
              "      <td>0.489517</td>\n",
              "      <td>0.468056</td>\n",
              "      <td>0.446356</td>\n",
              "      <td>0.436881</td>\n",
              "      <td>0.269831</td>\n",
              "      <td>9568.621827</td>\n",
              "      <td>956.175202</td>\n",
              "      <td>2493.901134</td>\n",
              "      <td>645.530187</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>-8000.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>-70.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>141.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>170.000000</td>\n",
              "      <td>40.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>340.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>570.000000</td>\n",
              "      <td>170.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>39.000000</td>\n",
              "      <td>570.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2280.000000</td>\n",
              "      <td>1068.000000</td>\n",
              "      <td>1500.000000</td>\n",
              "      <td>460.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>54.000000</td>\n",
              "      <td>999.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>12.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>161470.000000</td>\n",
              "      <td>38272.000000</td>\n",
              "      <td>102960.000000</td>\n",
              "      <td>13840.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              Gender  ...  OPAnnualDeductibleAmt\n",
              "count  138556.000000  ...          138556.000000\n",
              "mean        1.570932  ...             377.718258\n",
              "std         0.494945  ...             645.530187\n",
              "min         1.000000  ...               0.000000\n",
              "25%         1.000000  ...              40.000000\n",
              "50%         2.000000  ...             170.000000\n",
              "75%         2.000000  ...             460.000000\n",
              "max         2.000000  ...           13840.000000\n",
              "\n",
              "[8 rows x 21 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3_yQnCmVVWyN"
      },
      "source": [
        "**Checking for missing values:**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aLHodbrlVQEm",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fab36dc2-5d67-4c47-cc81-f45a45c49567"
      },
      "source": [
        "train_ben.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BeneID                                  0\n",
              "DOB                                     0\n",
              "DOD                                137135\n",
              "Gender                                  0\n",
              "Race                                    0\n",
              "RenalDiseaseIndicator                   0\n",
              "State                                   0\n",
              "County                                  0\n",
              "NoOfMonths_PartACov                     0\n",
              "NoOfMonths_PartBCov                     0\n",
              "ChronicCond_Alzheimer                   0\n",
              "ChronicCond_Heartfailure                0\n",
              "ChronicCond_KidneyDisease               0\n",
              "ChronicCond_Cancer                      0\n",
              "ChronicCond_ObstrPulmonary              0\n",
              "ChronicCond_Depression                  0\n",
              "ChronicCond_Diabetes                    0\n",
              "ChronicCond_IschemicHeart               0\n",
              "ChronicCond_Osteoporasis                0\n",
              "ChronicCond_rheumatoidarthritis         0\n",
              "ChronicCond_stroke                      0\n",
              "IPAnnualReimbursementAmt                0\n",
              "IPAnnualDeductibleAmt                   0\n",
              "OPAnnualReimbursementAmt                0\n",
              "OPAnnualDeductibleAmt                   0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ih0-sfZKWvJW"
      },
      "source": [
        "**Checking variables' correlation**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fdD4_64eVQME",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 728
        },
        "outputId": "45534e17-07b4-471f-c160-a13c07368819"
      },
      "source": [
        "train_ben.corr().round(2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Race</th>\n",
              "      <th>State</th>\n",
              "      <th>County</th>\n",
              "      <th>NoOfMonths_PartACov</th>\n",
              "      <th>NoOfMonths_PartBCov</th>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "      <th>ChronicCond_Heartfailure</th>\n",
              "      <th>ChronicCond_KidneyDisease</th>\n",
              "      <th>ChronicCond_Cancer</th>\n",
              "      <th>ChronicCond_ObstrPulmonary</th>\n",
              "      <th>ChronicCond_Depression</th>\n",
              "      <th>ChronicCond_Diabetes</th>\n",
              "      <th>ChronicCond_IschemicHeart</th>\n",
              "      <th>ChronicCond_Osteoporasis</th>\n",
              "      <th>ChronicCond_rheumatoidarthritis</th>\n",
              "      <th>ChronicCond_stroke</th>\n",
              "      <th>IPAnnualReimbursementAmt</th>\n",
              "      <th>IPAnnualDeductibleAmt</th>\n",
              "      <th>OPAnnualReimbursementAmt</th>\n",
              "      <th>OPAnnualDeductibleAmt</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Gender</th>\n",
              "      <td>1.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Race</th>\n",
              "      <td>0.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>State</th>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.13</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>County</th>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.13</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NoOfMonths_PartACov</th>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.24</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NoOfMonths_PartBCov</th>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.24</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.13</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_Heartfailure</th>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>0.20</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.14</td>\n",
              "      <td>-0.18</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_KidneyDisease</th>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.31</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.15</td>\n",
              "      <td>-0.27</td>\n",
              "      <td>-0.27</td>\n",
              "      <td>-0.21</td>\n",
              "      <td>-0.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_Cancer</th>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.04</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_ObstrPulmonary</th>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.11</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.13</td>\n",
              "      <td>-0.22</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.11</td>\n",
              "      <td>-0.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_Depression</th>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.17</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.09</td>\n",
              "      <td>-0.11</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_Diabetes</th>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.31</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.20</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.30</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.17</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-0.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_IschemicHeart</th>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.03</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.29</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.11</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_Osteoporasis</th>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.11</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.05</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>-0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_rheumatoidarthritis</th>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>-0.02</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.07</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.14</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.07</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>-0.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ChronicCond_stroke</th>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>-0.01</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.09</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.14</td>\n",
              "      <td>-0.14</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IPAnnualReimbursementAmt</th>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.18</td>\n",
              "      <td>-0.27</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.22</td>\n",
              "      <td>-0.11</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.14</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>IPAnnualDeductibleAmt</th>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>-0.27</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.17</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-0.14</td>\n",
              "      <td>0.63</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>OPAnnualReimbursementAmt</th>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.02</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-0.21</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.11</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>-0.05</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.11</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>OPAnnualDeductibleAmt</th>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.02</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>-0.21</td>\n",
              "      <td>-0.08</td>\n",
              "      <td>-0.12</td>\n",
              "      <td>-0.10</td>\n",
              "      <td>-0.16</td>\n",
              "      <td>-0.14</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>-0.07</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.75</td>\n",
              "      <td>1.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                 Gender  ...  OPAnnualDeductibleAmt\n",
              "Gender                             1.00  ...                   0.01\n",
              "Race                               0.00  ...                   0.00\n",
              "State                              0.01  ...                  -0.00\n",
              "County                             0.00  ...                   0.01\n",
              "NoOfMonths_PartACov                0.01  ...                   0.01\n",
              "NoOfMonths_PartBCov                0.01  ...                   0.02\n",
              "ChronicCond_Alzheimer             -0.02  ...                  -0.10\n",
              "ChronicCond_Heartfailure          -0.01  ...                  -0.15\n",
              "ChronicCond_KidneyDisease         -0.01  ...                  -0.21\n",
              "ChronicCond_Cancer                 0.01  ...                  -0.08\n",
              "ChronicCond_ObstrPulmonary        -0.01  ...                  -0.12\n",
              "ChronicCond_Depression            -0.02  ...                  -0.10\n",
              "ChronicCond_Diabetes              -0.02  ...                  -0.16\n",
              "ChronicCond_IschemicHeart         -0.01  ...                  -0.14\n",
              "ChronicCond_Osteoporasis          -0.02  ...                  -0.06\n",
              "ChronicCond_rheumatoidarthritis   -0.01  ...                  -0.07\n",
              "ChronicCond_stroke                -0.00  ...                  -0.07\n",
              "IPAnnualReimbursementAmt           0.00  ...                   0.12\n",
              "IPAnnualDeductibleAmt             -0.00  ...                   0.11\n",
              "OPAnnualReimbursementAmt           0.01  ...                   0.75\n",
              "OPAnnualDeductibleAmt              0.01  ...                   1.00\n",
              "\n",
              "[21 rows x 21 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hldgq_BaYitG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 572
        },
        "outputId": "277b7d35-81a6-4c71-d9c7-3575bee14bb2"
      },
      "source": [
        "import seaborn as sns; sns.set_theme()\n",
        "import matplotlib.pyplot as plt\n",
        "# Increase the size of the heatmap.\n",
        "plt.figure(figsize=(16, 6))\n",
        "# Store heatmap object in a variable to easily access it when you want to include more features (such as title).\n",
        "# Set the range of values to be displayed on the colormap from -1 to 1, and set the annotation to True to display the correlation values on the heatmap.\n",
        "heatmap = sns.heatmap(train_ben.corr(), vmin=-1, vmax=1, annot=True, cmap=\"YlGnBu\")\n",
        "# Give a title to the heatmap. Pad defines the distance of the title from the top of the heatmap.\n",
        "heatmap.set_title('Correlation Heatmap', fontdict={'fontsize':12}, pad=12);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1152x432 with 2 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "JLaHSiSTei2E"
      },
      "source": [
        "**Data Visualization**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nLK2aprbemgs",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "1d8d333f-5cc0-4f2d-e756-f405a5fa6ac1"
      },
      "source": [
        "train_ben.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x1440 with 25 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "N0PIsnfwfP4o"
      },
      "source": [
        "## Inpatient Dataset: "
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xY-_8SBAQrYf",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6bb324cf-0fbb-40e6-af22-2953cd35510c"
      },
      "source": [
        "train_in.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BeneID</th>\n",
              "      <th>ClaimID</th>\n",
              "      <th>ClaimStartDt</th>\n",
              "      <th>ClaimEndDt</th>\n",
              "      <th>Provider</th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>OperatingPhysician</th>\n",
              "      <th>OtherPhysician</th>\n",
              "      <th>AdmissionDt</th>\n",
              "      <th>ClmAdmitDiagnosisCode</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <th>DischargeDt</th>\n",
              "      <th>DiagnosisGroupCode</th>\n",
              "      <th>ClmDiagnosisCode_1</th>\n",
              "      <th>ClmDiagnosisCode_2</th>\n",
              "      <th>ClmDiagnosisCode_3</th>\n",
              "      <th>ClmDiagnosisCode_4</th>\n",
              "      <th>ClmDiagnosisCode_5</th>\n",
              "      <th>ClmDiagnosisCode_6</th>\n",
              "      <th>ClmDiagnosisCode_7</th>\n",
              "      <th>ClmDiagnosisCode_8</th>\n",
              "      <th>ClmDiagnosisCode_9</th>\n",
              "      <th>ClmDiagnosisCode_10</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BENE11001</td>\n",
              "      <td>CLM46614</td>\n",
              "      <td>2009-04-12</td>\n",
              "      <td>2009-04-18</td>\n",
              "      <td>PRV55912</td>\n",
              "      <td>26000</td>\n",
              "      <td>PHY390922</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2009-04-12</td>\n",
              "      <td>7866</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>2009-04-18</td>\n",
              "      <td>201</td>\n",
              "      <td>1970</td>\n",
              "      <td>4019</td>\n",
              "      <td>5853</td>\n",
              "      <td>7843</td>\n",
              "      <td>2768</td>\n",
              "      <td>71590</td>\n",
              "      <td>2724</td>\n",
              "      <td>19889</td>\n",
              "      <td>5849</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BENE11001</td>\n",
              "      <td>CLM66048</td>\n",
              "      <td>2009-08-31</td>\n",
              "      <td>2009-09-02</td>\n",
              "      <td>PRV55907</td>\n",
              "      <td>5000</td>\n",
              "      <td>PHY318495</td>\n",
              "      <td>PHY318495</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2009-08-31</td>\n",
              "      <td>6186</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>2009-09-02</td>\n",
              "      <td>750</td>\n",
              "      <td>6186</td>\n",
              "      <td>2948</td>\n",
              "      <td>56400</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>7092.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BENE11001</td>\n",
              "      <td>CLM68358</td>\n",
              "      <td>2009-09-17</td>\n",
              "      <td>2009-09-20</td>\n",
              "      <td>PRV56046</td>\n",
              "      <td>5000</td>\n",
              "      <td>PHY372395</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PHY324689</td>\n",
              "      <td>2009-09-17</td>\n",
              "      <td>29590</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>2009-09-20</td>\n",
              "      <td>883</td>\n",
              "      <td>29623</td>\n",
              "      <td>30390</td>\n",
              "      <td>71690</td>\n",
              "      <td>34590</td>\n",
              "      <td>V1581</td>\n",
              "      <td>32723</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BENE11011</td>\n",
              "      <td>CLM38412</td>\n",
              "      <td>2009-02-14</td>\n",
              "      <td>2009-02-22</td>\n",
              "      <td>PRV52405</td>\n",
              "      <td>5000</td>\n",
              "      <td>PHY369659</td>\n",
              "      <td>PHY392961</td>\n",
              "      <td>PHY349768</td>\n",
              "      <td>2009-02-14</td>\n",
              "      <td>431</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>2009-02-22</td>\n",
              "      <td>067</td>\n",
              "      <td>43491</td>\n",
              "      <td>2762</td>\n",
              "      <td>7843</td>\n",
              "      <td>32723</td>\n",
              "      <td>V1041</td>\n",
              "      <td>4254</td>\n",
              "      <td>25062</td>\n",
              "      <td>40390</td>\n",
              "      <td>4019</td>\n",
              "      <td>NaN</td>\n",
              "      <td>331.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BENE11014</td>\n",
              "      <td>CLM63689</td>\n",
              "      <td>2009-08-13</td>\n",
              "      <td>2009-08-30</td>\n",
              "      <td>PRV56614</td>\n",
              "      <td>10000</td>\n",
              "      <td>PHY379376</td>\n",
              "      <td>PHY398258</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2009-08-13</td>\n",
              "      <td>78321</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>2009-08-30</td>\n",
              "      <td>975</td>\n",
              "      <td>042</td>\n",
              "      <td>3051</td>\n",
              "      <td>34400</td>\n",
              "      <td>5856</td>\n",
              "      <td>42732</td>\n",
              "      <td>486</td>\n",
              "      <td>5119</td>\n",
              "      <td>29620</td>\n",
              "      <td>20300</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3893.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      BeneID   ClaimID  ... ClmProcedureCode_5 ClmProcedureCode_6\n",
              "0  BENE11001  CLM46614  ...                NaN                NaN\n",
              "1  BENE11001  CLM66048  ...                NaN                NaN\n",
              "2  BENE11001  CLM68358  ...                NaN                NaN\n",
              "3  BENE11011  CLM38412  ...                NaN                NaN\n",
              "4  BENE11014  CLM63689  ...                NaN                NaN\n",
              "\n",
              "[5 rows x 30 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Dt_zzHbUZqyk",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4a047588-c198-4223-9b9b-290907083a5f"
      },
      "source": [
        "train_in['ClaimID'].nunique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "40474"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SpYW0WYsZ-EI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "948abbec-1f2d-4250-d45d-035a7ea202eb"
      },
      "source": [
        "train_in['BeneID'].nunique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "31289"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Sgtwki6baDKF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "86792aa7-86ad-4d84-8fd1-fa276b24bcb9"
      },
      "source": [
        "train_in['Provider'].nunique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2092"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lpe66F8oQrUp",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9b21d9d6-6ae5-44a3-b165-6825744c9340"
      },
      "source": [
        "train_in.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(40474, 30)"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MLnGCwikUiZF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0c69f2f1-998c-4bbb-b01d-a02d5cd95c6a"
      },
      "source": [
        "train_in.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>40474.000000</td>\n",
              "      <td>39575.0</td>\n",
              "      <td>23148.000000</td>\n",
              "      <td>5454.000000</td>\n",
              "      <td>965.000000</td>\n",
              "      <td>116.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>10087.884074</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>5894.611759</td>\n",
              "      <td>4103.738174</td>\n",
              "      <td>4226.355440</td>\n",
              "      <td>4070.172414</td>\n",
              "      <td>5269.444444</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>10303.099402</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3049.304400</td>\n",
              "      <td>2028.182156</td>\n",
              "      <td>2282.761581</td>\n",
              "      <td>1994.409802</td>\n",
              "      <td>2780.071632</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>11.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>2724.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4000.000000</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>3848.000000</td>\n",
              "      <td>2724.000000</td>\n",
              "      <td>2724.000000</td>\n",
              "      <td>2758.750000</td>\n",
              "      <td>4139.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>7000.000000</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>5369.000000</td>\n",
              "      <td>4019.000000</td>\n",
              "      <td>4019.000000</td>\n",
              "      <td>4019.000000</td>\n",
              "      <td>4139.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>12000.000000</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>8666.250000</td>\n",
              "      <td>4439.000000</td>\n",
              "      <td>5185.000000</td>\n",
              "      <td>4439.000000</td>\n",
              "      <td>5185.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>125000.000000</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>9999.000000</td>\n",
              "      <td>9999.000000</td>\n",
              "      <td>9999.000000</td>\n",
              "      <td>9986.000000</td>\n",
              "      <td>9982.000000</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       InscClaimAmtReimbursed  ...  ClmProcedureCode_6\n",
              "count            40474.000000  ...                 0.0\n",
              "mean             10087.884074  ...                 NaN\n",
              "std              10303.099402  ...                 NaN\n",
              "min                  0.000000  ...                 NaN\n",
              "25%               4000.000000  ...                 NaN\n",
              "50%               7000.000000  ...                 NaN\n",
              "75%              12000.000000  ...                 NaN\n",
              "max             125000.000000  ...                 NaN\n",
              "\n",
              "[8 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "09eio2lvVQG7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c12d4c18-6cc5-462e-c5c5-b0a7ae6c7008"
      },
      "source": [
        "train_in.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BeneID                        0\n",
              "ClaimID                       0\n",
              "ClaimStartDt                  0\n",
              "ClaimEndDt                    0\n",
              "Provider                      0\n",
              "InscClaimAmtReimbursed        0\n",
              "AttendingPhysician          112\n",
              "OperatingPhysician        16644\n",
              "OtherPhysician            35784\n",
              "AdmissionDt                   0\n",
              "ClmAdmitDiagnosisCode         0\n",
              "DeductibleAmtPaid           899\n",
              "DischargeDt                   0\n",
              "DiagnosisGroupCode            0\n",
              "ClmDiagnosisCode_1            0\n",
              "ClmDiagnosisCode_2          226\n",
              "ClmDiagnosisCode_3          676\n",
              "ClmDiagnosisCode_4         1534\n",
              "ClmDiagnosisCode_5         2894\n",
              "ClmDiagnosisCode_6         4838\n",
              "ClmDiagnosisCode_7         7258\n",
              "ClmDiagnosisCode_8         9942\n",
              "ClmDiagnosisCode_9        13497\n",
              "ClmDiagnosisCode_10       36547\n",
              "ClmProcedureCode_1        17326\n",
              "ClmProcedureCode_2        35020\n",
              "ClmProcedureCode_3        39509\n",
              "ClmProcedureCode_4        40358\n",
              "ClmProcedureCode_5        40465\n",
              "ClmProcedureCode_6        40474\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "48B48BkvXCxK",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "d07a0a51-0505-4678-bd44-2e76bcb65ea1"
      },
      "source": [
        "train_in.corr().round(2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <td>1.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.15</td>\n",
              "      <td>0.11</td>\n",
              "      <td>0.13</td>\n",
              "      <td>-0.09</td>\n",
              "      <td>0.66</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <td>-0.15</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.73</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <td>0.11</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.65</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <td>0.13</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.14</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <td>-0.09</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.14</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.30</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <td>0.66</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.73</td>\n",
              "      <td>0.65</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.00</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                        InscClaimAmtReimbursed  ...  ClmProcedureCode_6\n",
              "InscClaimAmtReimbursed                    1.00  ...                 NaN\n",
              "DeductibleAmtPaid                          NaN  ...                 NaN\n",
              "ClmProcedureCode_1                       -0.15  ...                 NaN\n",
              "ClmProcedureCode_2                        0.11  ...                 NaN\n",
              "ClmProcedureCode_3                        0.13  ...                 NaN\n",
              "ClmProcedureCode_4                       -0.09  ...                 NaN\n",
              "ClmProcedureCode_5                        0.66  ...                 NaN\n",
              "ClmProcedureCode_6                         NaN  ...                 NaN\n",
              "\n",
              "[8 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pWzPW5C5UPtH",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "48ded132-58e6-4a99-82e8-5c7817bd9c1c"
      },
      "source": [
        "train_in.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 40474 entries, 0 to 40473\n",
            "Data columns (total 30 columns):\n",
            " #   Column                  Non-Null Count  Dtype  \n",
            "---  ------                  --------------  -----  \n",
            " 0   BeneID                  40474 non-null  object \n",
            " 1   ClaimID                 40474 non-null  object \n",
            " 2   ClaimStartDt            40474 non-null  object \n",
            " 3   ClaimEndDt              40474 non-null  object \n",
            " 4   Provider                40474 non-null  object \n",
            " 5   InscClaimAmtReimbursed  40474 non-null  int64  \n",
            " 6   AttendingPhysician      40362 non-null  object \n",
            " 7   OperatingPhysician      23830 non-null  object \n",
            " 8   OtherPhysician          4690 non-null   object \n",
            " 9   AdmissionDt             40474 non-null  object \n",
            " 10  ClmAdmitDiagnosisCode   40474 non-null  object \n",
            " 11  DeductibleAmtPaid       39575 non-null  float64\n",
            " 12  DischargeDt             40474 non-null  object \n",
            " 13  DiagnosisGroupCode      40474 non-null  object \n",
            " 14  ClmDiagnosisCode_1      40474 non-null  object \n",
            " 15  ClmDiagnosisCode_2      40248 non-null  object \n",
            " 16  ClmDiagnosisCode_3      39798 non-null  object \n",
            " 17  ClmDiagnosisCode_4      38940 non-null  object \n",
            " 18  ClmDiagnosisCode_5      37580 non-null  object \n",
            " 19  ClmDiagnosisCode_6      35636 non-null  object \n",
            " 20  ClmDiagnosisCode_7      33216 non-null  object \n",
            " 21  ClmDiagnosisCode_8      30532 non-null  object \n",
            " 22  ClmDiagnosisCode_9      26977 non-null  object \n",
            " 23  ClmDiagnosisCode_10     3927 non-null   object \n",
            " 24  ClmProcedureCode_1      23148 non-null  float64\n",
            " 25  ClmProcedureCode_2      5454 non-null   float64\n",
            " 26  ClmProcedureCode_3      965 non-null    float64\n",
            " 27  ClmProcedureCode_4      116 non-null    float64\n",
            " 28  ClmProcedureCode_5      9 non-null      float64\n",
            " 29  ClmProcedureCode_6      0 non-null      float64\n",
            "dtypes: float64(7), int64(1), object(22)\n",
            "memory usage: 9.3+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HlFxpv_8gIBE",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6aa11d4a-8284-4dd6-9571-58f208184d17"
      },
      "source": [
        "train_in.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x1440 with 9 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jGaTW72lgB2q"
      },
      "source": [
        "## Outpatient Dataset:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DdDjtAMUSI9l",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "46332239-293c-4aef-b447-a0e0bde0ac86"
      },
      "source": [
        "train_out.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BeneID</th>\n",
              "      <th>ClaimID</th>\n",
              "      <th>ClaimStartDt</th>\n",
              "      <th>ClaimEndDt</th>\n",
              "      <th>Provider</th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>OperatingPhysician</th>\n",
              "      <th>OtherPhysician</th>\n",
              "      <th>ClmDiagnosisCode_1</th>\n",
              "      <th>ClmDiagnosisCode_2</th>\n",
              "      <th>ClmDiagnosisCode_3</th>\n",
              "      <th>ClmDiagnosisCode_4</th>\n",
              "      <th>ClmDiagnosisCode_5</th>\n",
              "      <th>ClmDiagnosisCode_6</th>\n",
              "      <th>ClmDiagnosisCode_7</th>\n",
              "      <th>ClmDiagnosisCode_8</th>\n",
              "      <th>ClmDiagnosisCode_9</th>\n",
              "      <th>ClmDiagnosisCode_10</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <th>ClmAdmitDiagnosisCode</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BENE11002</td>\n",
              "      <td>CLM624349</td>\n",
              "      <td>2009-10-11</td>\n",
              "      <td>2009-10-11</td>\n",
              "      <td>PRV56011</td>\n",
              "      <td>30</td>\n",
              "      <td>PHY326117</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>78943</td>\n",
              "      <td>V5866</td>\n",
              "      <td>V1272</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>56409</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BENE11003</td>\n",
              "      <td>CLM189947</td>\n",
              "      <td>2009-02-12</td>\n",
              "      <td>2009-02-12</td>\n",
              "      <td>PRV57610</td>\n",
              "      <td>80</td>\n",
              "      <td>PHY362868</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>6115</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>79380</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BENE11003</td>\n",
              "      <td>CLM438021</td>\n",
              "      <td>2009-06-27</td>\n",
              "      <td>2009-06-27</td>\n",
              "      <td>PRV57595</td>\n",
              "      <td>10</td>\n",
              "      <td>PHY328821</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2723</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BENE11004</td>\n",
              "      <td>CLM121801</td>\n",
              "      <td>2009-01-06</td>\n",
              "      <td>2009-01-06</td>\n",
              "      <td>PRV56011</td>\n",
              "      <td>40</td>\n",
              "      <td>PHY334319</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>71988</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BENE11004</td>\n",
              "      <td>CLM150998</td>\n",
              "      <td>2009-01-22</td>\n",
              "      <td>2009-01-22</td>\n",
              "      <td>PRV56011</td>\n",
              "      <td>200</td>\n",
              "      <td>PHY403831</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>82382</td>\n",
              "      <td>30000</td>\n",
              "      <td>72887</td>\n",
              "      <td>4280</td>\n",
              "      <td>7197</td>\n",
              "      <td>V4577</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0</td>\n",
              "      <td>71947</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      BeneID    ClaimID  ... DeductibleAmtPaid ClmAdmitDiagnosisCode\n",
              "0  BENE11002  CLM624349  ...                 0                 56409\n",
              "1  BENE11003  CLM189947  ...                 0                 79380\n",
              "2  BENE11003  CLM438021  ...                 0                   NaN\n",
              "3  BENE11004  CLM121801  ...                 0                   NaN\n",
              "4  BENE11004  CLM150998  ...                 0                 71947\n",
              "\n",
              "[5 rows x 27 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GHGyl4suQrZi",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8a2ea03c-0ee4-4d9a-bbd7-1a9ea0fcafc0"
      },
      "source": [
        "train_out.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(517737, 27)"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "r22htn4XddWO",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fe905c32-2b9f-483a-d352-75d90709c0ac"
      },
      "source": [
        "train_out['Provider'].nunique()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5012"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yt2yRtetUh0B",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "082324bf-8100-4c62-c5d1-e72216405bce"
      },
      "source": [
        "train_out.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 517737 entries, 0 to 517736\n",
            "Data columns (total 27 columns):\n",
            " #   Column                  Non-Null Count   Dtype  \n",
            "---  ------                  --------------   -----  \n",
            " 0   BeneID                  517737 non-null  object \n",
            " 1   ClaimID                 517737 non-null  object \n",
            " 2   ClaimStartDt            517737 non-null  object \n",
            " 3   ClaimEndDt              517737 non-null  object \n",
            " 4   Provider                517737 non-null  object \n",
            " 5   InscClaimAmtReimbursed  517737 non-null  int64  \n",
            " 6   AttendingPhysician      516341 non-null  object \n",
            " 7   OperatingPhysician      90617 non-null   object \n",
            " 8   OtherPhysician          195046 non-null  object \n",
            " 9   ClmDiagnosisCode_1      507284 non-null  object \n",
            " 10  ClmDiagnosisCode_2      322357 non-null  object \n",
            " 11  ClmDiagnosisCode_3      203257 non-null  object \n",
            " 12  ClmDiagnosisCode_4      125596 non-null  object \n",
            " 13  ClmDiagnosisCode_5      74344 non-null   object \n",
            " 14  ClmDiagnosisCode_6      48756 non-null   object \n",
            " 15  ClmDiagnosisCode_7      32961 non-null   object \n",
            " 16  ClmDiagnosisCode_8      22912 non-null   object \n",
            " 17  ClmDiagnosisCode_9      14838 non-null   object \n",
            " 18  ClmDiagnosisCode_10     1083 non-null    object \n",
            " 19  ClmProcedureCode_1      162 non-null     float64\n",
            " 20  ClmProcedureCode_2      36 non-null      float64\n",
            " 21  ClmProcedureCode_3      4 non-null       float64\n",
            " 22  ClmProcedureCode_4      2 non-null       float64\n",
            " 23  ClmProcedureCode_5      0 non-null       float64\n",
            " 24  ClmProcedureCode_6      0 non-null       float64\n",
            " 25  DeductibleAmtPaid       517737 non-null  int64  \n",
            " 26  ClmAdmitDiagnosisCode   105425 non-null  object \n",
            "dtypes: float64(6), int64(2), object(19)\n",
            "memory usage: 106.7+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fceSZhV4UijM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2d045da1-2e21-44a7-cab6-c47b18d02ff6"
      },
      "source": [
        "train_out.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>517737.000000</td>\n",
              "      <td>162.000000</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>517737.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>286.334799</td>\n",
              "      <td>6116.611111</td>\n",
              "      <td>4503.277778</td>\n",
              "      <td>2959.000000</td>\n",
              "      <td>4075.500000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.779233</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>694.034343</td>\n",
              "      <td>3217.719258</td>\n",
              "      <td>2504.015000</td>\n",
              "      <td>1863.455393</td>\n",
              "      <td>5323.806956</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>15.785839</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>51.000000</td>\n",
              "      <td>412.000000</td>\n",
              "      <td>412.000000</td>\n",
              "      <td>311.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>40.000000</td>\n",
              "      <td>3893.000000</td>\n",
              "      <td>2724.000000</td>\n",
              "      <td>2146.000000</td>\n",
              "      <td>2193.250000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>80.000000</td>\n",
              "      <td>5244.500000</td>\n",
              "      <td>4019.000000</td>\n",
              "      <td>3511.500000</td>\n",
              "      <td>4075.500000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>200.000000</td>\n",
              "      <td>9421.500000</td>\n",
              "      <td>5849.000000</td>\n",
              "      <td>4324.500000</td>\n",
              "      <td>5957.750000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>102500.000000</td>\n",
              "      <td>9999.000000</td>\n",
              "      <td>9982.000000</td>\n",
              "      <td>4401.000000</td>\n",
              "      <td>7840.000000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>897.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       InscClaimAmtReimbursed  ...  DeductibleAmtPaid\n",
              "count           517737.000000  ...      517737.000000\n",
              "mean               286.334799  ...           2.779233\n",
              "std                694.034343  ...          15.785839\n",
              "min                  0.000000  ...           0.000000\n",
              "25%                 40.000000  ...           0.000000\n",
              "50%                 80.000000  ...           0.000000\n",
              "75%                200.000000  ...           0.000000\n",
              "max             102500.000000  ...         897.000000\n",
              "\n",
              "[8 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-kPDmAGaVQI3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3699beaa-cf50-4208-e9f0-75e3d749fe3d"
      },
      "source": [
        "train_out.isna().sum()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "BeneID                         0\n",
              "ClaimID                        0\n",
              "ClaimStartDt                   0\n",
              "ClaimEndDt                     0\n",
              "Provider                       0\n",
              "InscClaimAmtReimbursed         0\n",
              "AttendingPhysician          1396\n",
              "OperatingPhysician        427120\n",
              "OtherPhysician            322691\n",
              "ClmDiagnosisCode_1         10453\n",
              "ClmDiagnosisCode_2        195380\n",
              "ClmDiagnosisCode_3        314480\n",
              "ClmDiagnosisCode_4        392141\n",
              "ClmDiagnosisCode_5        443393\n",
              "ClmDiagnosisCode_6        468981\n",
              "ClmDiagnosisCode_7        484776\n",
              "ClmDiagnosisCode_8        494825\n",
              "ClmDiagnosisCode_9        502899\n",
              "ClmDiagnosisCode_10       516654\n",
              "ClmProcedureCode_1        517575\n",
              "ClmProcedureCode_2        517701\n",
              "ClmProcedureCode_3        517733\n",
              "ClmProcedureCode_4        517735\n",
              "ClmProcedureCode_5        517737\n",
              "ClmProcedureCode_6        517737\n",
              "DeductibleAmtPaid              0\n",
              "ClmAdmitDiagnosisCode     412312\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cnLW-nUAXC0A",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2c312c48-2151-44ca-d28a-a38507559bef"
      },
      "source": [
        "train_out.corr().round(2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.06</td>\n",
              "      <td>0.19</td>\n",
              "      <td>-0.65</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <td>-0.06</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.15</td>\n",
              "      <td>0.44</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-0.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <td>0.19</td>\n",
              "      <td>0.15</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.49</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <td>-0.65</td>\n",
              "      <td>0.44</td>\n",
              "      <td>-0.49</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <td>1.00</td>\n",
              "      <td>-1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-1.00</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <td>0.09</td>\n",
              "      <td>-0.04</td>\n",
              "      <td>0.22</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                        InscClaimAmtReimbursed  ...  DeductibleAmtPaid\n",
              "InscClaimAmtReimbursed                    1.00  ...               0.09\n",
              "ClmProcedureCode_1                       -0.06  ...              -0.04\n",
              "ClmProcedureCode_2                        0.19  ...               0.22\n",
              "ClmProcedureCode_3                       -0.65  ...                NaN\n",
              "ClmProcedureCode_4                        1.00  ...                NaN\n",
              "ClmProcedureCode_5                         NaN  ...                NaN\n",
              "ClmProcedureCode_6                         NaN  ...                NaN\n",
              "DeductibleAmtPaid                         0.09  ...               1.00\n",
              "\n",
              "[8 rows x 8 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DmPI4CldXC25",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9ffb24f7-a8f6-410d-ae31-13608da640cf"
      },
      "source": [
        "train_out.hist(figsize=(16, 20), bins=50, xlabelsize=8, ylabelsize=8);"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1152x1440 with 9 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vr9yzwv28bb8"
      },
      "source": [
        "## Merging the datasets:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_qeQD0da-lPO"
      },
      "source": [
        "train_in['Claim_type']='Inpatient'\n",
        "train_out['Claim_type']='Outpatient'"
      ],
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "z9n819RT8ag5"
      },
      "source": [
        "final_train=pd.concat([train_in, train_out])\n",
        "final_train=pd.merge(train_ben, final_train, on='BeneID')\n",
        "final_train=pd.merge(final_train, train, on='Provider')"
      ],
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "M6DQB2he8aoQ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 357
        },
        "outputId": "b1d177e5-3f78-47b1-8723-137f5429a3a6"
      },
      "source": [
        "final_train.head()"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-75b45ebc-20ba-482a-9b55-67664d0465f4\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BeneID</th>\n",
              "      <th>DOB</th>\n",
              "      <th>DOD</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Race</th>\n",
              "      <th>RenalDiseaseIndicator</th>\n",
              "      <th>State</th>\n",
              "      <th>County</th>\n",
              "      <th>NoOfMonths_PartACov</th>\n",
              "      <th>NoOfMonths_PartBCov</th>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "      <th>ChronicCond_Heartfailure</th>\n",
              "      <th>ChronicCond_KidneyDisease</th>\n",
              "      <th>ChronicCond_Cancer</th>\n",
              "      <th>ChronicCond_ObstrPulmonary</th>\n",
              "      <th>ChronicCond_Depression</th>\n",
              "      <th>ChronicCond_Diabetes</th>\n",
              "      <th>ChronicCond_IschemicHeart</th>\n",
              "      <th>ChronicCond_Osteoporasis</th>\n",
              "      <th>ChronicCond_rheumatoidarthritis</th>\n",
              "      <th>ChronicCond_stroke</th>\n",
              "      <th>IPAnnualReimbursementAmt</th>\n",
              "      <th>IPAnnualDeductibleAmt</th>\n",
              "      <th>OPAnnualReimbursementAmt</th>\n",
              "      <th>OPAnnualDeductibleAmt</th>\n",
              "      <th>ClaimID</th>\n",
              "      <th>ClaimStartDt</th>\n",
              "      <th>ClaimEndDt</th>\n",
              "      <th>Provider</th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>OperatingPhysician</th>\n",
              "      <th>OtherPhysician</th>\n",
              "      <th>AdmissionDt</th>\n",
              "      <th>ClmAdmitDiagnosisCode</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <th>DischargeDt</th>\n",
              "      <th>DiagnosisGroupCode</th>\n",
              "      <th>ClmDiagnosisCode_1</th>\n",
              "      <th>ClmDiagnosisCode_2</th>\n",
              "      <th>ClmDiagnosisCode_3</th>\n",
              "      <th>ClmDiagnosisCode_4</th>\n",
              "      <th>ClmDiagnosisCode_5</th>\n",
              "      <th>ClmDiagnosisCode_6</th>\n",
              "      <th>ClmDiagnosisCode_7</th>\n",
              "      <th>ClmDiagnosisCode_8</th>\n",
              "      <th>ClmDiagnosisCode_9</th>\n",
              "      <th>ClmDiagnosisCode_10</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <th>Claim_type</th>\n",
              "      <th>PotentialFraud</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>BENE11001</td>\n",
              "      <td>1943-01-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>230</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>36000</td>\n",
              "      <td>3204</td>\n",
              "      <td>60</td>\n",
              "      <td>70</td>\n",
              "      <td>CLM46614</td>\n",
              "      <td>2009-04-12</td>\n",
              "      <td>2009-04-18</td>\n",
              "      <td>PRV55912</td>\n",
              "      <td>26000</td>\n",
              "      <td>PHY390922</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2009-04-12</td>\n",
              "      <td>7866</td>\n",
              "      <td>1068.0</td>\n",
              "      <td>2009-04-18</td>\n",
              "      <td>201</td>\n",
              "      <td>1970</td>\n",
              "      <td>4019</td>\n",
              "      <td>5853</td>\n",
              "      <td>7843</td>\n",
              "      <td>2768</td>\n",
              "      <td>71590</td>\n",
              "      <td>2724</td>\n",
              "      <td>19889</td>\n",
              "      <td>5849</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Inpatient</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>BENE12511</td>\n",
              "      <td>1944-09-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>510</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1250</td>\n",
              "      <td>90</td>\n",
              "      <td>CLM724430</td>\n",
              "      <td>2009-12-11</td>\n",
              "      <td>2009-12-11</td>\n",
              "      <td>PRV55912</td>\n",
              "      <td>600</td>\n",
              "      <td>PHY420794</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>V560</td>\n",
              "      <td>V4283</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Outpatient</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BENE14577</td>\n",
              "      <td>1935-10-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>Y</td>\n",
              "      <td>33</td>\n",
              "      <td>70</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2390</td>\n",
              "      <td>440</td>\n",
              "      <td>CLM567180</td>\n",
              "      <td>2009-09-07</td>\n",
              "      <td>2009-09-07</td>\n",
              "      <td>PRV55912</td>\n",
              "      <td>20</td>\n",
              "      <td>PHY381733</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0401</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Outpatient</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BENE15074</td>\n",
              "      <td>1932-06-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>470</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>870</td>\n",
              "      <td>210</td>\n",
              "      <td>CLM259984</td>\n",
              "      <td>2009-03-22</td>\n",
              "      <td>2009-03-22</td>\n",
              "      <td>PRV55912</td>\n",
              "      <td>30</td>\n",
              "      <td>PHY371570</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PHY393406</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>V812</td>\n",
              "      <td>40390</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Outpatient</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BENE16973</td>\n",
              "      <td>1932-05-01</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>39</td>\n",
              "      <td>310</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>24000</td>\n",
              "      <td>2136</td>\n",
              "      <td>450</td>\n",
              "      <td>200</td>\n",
              "      <td>CLM565430</td>\n",
              "      <td>2009-09-06</td>\n",
              "      <td>2009-09-06</td>\n",
              "      <td>PRV55912</td>\n",
              "      <td>50</td>\n",
              "      <td>PHY365867</td>\n",
              "      <td>PHY327147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>V7183</td>\n",
              "      <td>53081</td>\n",
              "      <td>78959</td>\n",
              "      <td>4280</td>\n",
              "      <td>E8788</td>\n",
              "      <td>78079</td>\n",
              "      <td>79902</td>\n",
              "      <td>25002</td>\n",
              "      <td>71848</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Outpatient</td>\n",
              "      <td>Yes</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75b45ebc-20ba-482a-9b55-67664d0465f4')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-75b45ebc-20ba-482a-9b55-67664d0465f4 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-75b45ebc-20ba-482a-9b55-67664d0465f4');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      BeneID         DOB  DOD  ...  ClmProcedureCode_6  Claim_type PotentialFraud\n",
              "0  BENE11001  1943-01-01  NaN  ...                 NaN   Inpatient            Yes\n",
              "1  BENE12511  1944-09-01  NaN  ...                 NaN  Outpatient            Yes\n",
              "2  BENE14577  1935-10-01  NaN  ...                 NaN  Outpatient            Yes\n",
              "3  BENE15074  1932-06-01  NaN  ...                 NaN  Outpatient            Yes\n",
              "4  BENE16973  1932-05-01  NaN  ...                 NaN  Outpatient            Yes\n",
              "\n",
              "[5 rows x 56 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "final_train.columns"
      ],
      "metadata": {
        "id": "9RxUrlI4TVPJ",
        "outputId": "ddda1755-c773-40c4-d76f-bb4aabaf0c09",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 165
        }
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-f2fe89f52bdd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfinal_train\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m: name 'final_train' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "q4TmG53A8arw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8c62d9c0-5db7-4570-c44e-664a375eb681"
      },
      "source": [
        "final_train.shape"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(558211, 56)"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZMnuoqvBApUV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b2650c6a-743c-4610-fb04-9bcd7943b6df"
      },
      "source": [
        "final_train['PotentialFraud'].value_counts(normalize=True)*100"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "No     61.878931\n",
              "Yes    38.121069\n",
              "Name: PotentialFraud, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "TmECMl7E3-Uf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "504e74d9-1731-4e27-983b-72ce20be3d64"
      },
      "source": [
        "groups = final_train.groupby(['PotentialFraud'], as_index=False)['ClaimID'].count()\n",
        "#Drowing the barplot\n",
        "ax=sns.barplot(x='PotentialFraud',y='ClaimID', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Number of claims\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Number of claims'), Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YkLtW9OX3-Xv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 296
        },
        "outputId": "707d6868-d05c-467a-f3c6-32fed85617a3"
      },
      "source": [
        "groups = final_train.groupby(['Provider', 'PotentialFraud'], as_index=False)['ClaimID'].count()\n",
        "groups=groups.groupby(['PotentialFraud'], as_index=False)['ClaimID'].mean()\n",
        "ax=sns.barplot(x='PotentialFraud',y='ClaimID', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Average number of claims\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Average number of claims'), Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QZYG2osXBqdQ"
      },
      "source": [
        "- IP Annual Reimbursement Amt:- Amount claimed by the beneficiary when admitted as an inpatient.\n",
        "- OP Annual Reimbursement Amt:- Amount claimed by the beneficiary when admitted as an outpatient. \n",
        "- IP Annual Deductible Amt:- money inpatient should pay to the provider before applying for a claim. \n",
        "- OP Annual Deductible Amt: money outpatient should pay to the provider before applying for a claim."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "np-gzCnT_24w",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "outputId": "43d6b164-4e0e-4423-a58d-fde500cd8854"
      },
      "source": [
        "groups = final_train.groupby(['Provider','PotentialFraud'], as_index=False)['IPAnnualDeductibleAmt'].sum()\n",
        "groups=groups.groupby(['PotentialFraud'], as_index=False)['IPAnnualDeductibleAmt'].mean()\n",
        "ax=sns.barplot(x='PotentialFraud',y='IPAnnualDeductibleAmt', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Average sum of IP Annual Deductible Amt taken by providers\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Average sum of IP Annual Deductible Amt taken by providers'),\n",
              " Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hH2K0WqCL4GD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 376
        },
        "outputId": "c088e277-1538-4462-b537-22d9c30482af"
      },
      "source": [
        "groups = final_train.groupby(['Provider','PotentialFraud'], as_index=False)['OPAnnualDeductibleAmt'].sum()\n",
        "groups=groups.groupby(['PotentialFraud'], as_index=False)['OPAnnualDeductibleAmt'].mean()\n",
        "ax=sns.barplot(x='PotentialFraud',y='OPAnnualDeductibleAmt', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Average sum of OP Annual Deductible Amt taken by providers\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Average sum of OP Annual Deductible Amt taken by providers'),\n",
              " Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 19
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yWjJBhC0GFFJ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 174
        },
        "outputId": "802b6af6-dd90-4b0f-d42b-bf643add3fd3"
      },
      "source": [
        "groups = final_train.groupby(['PotentialFraud', 'Claim_type'], as_index=False)['ClaimID'].count()\n",
        "groups"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>Claim_type</th>\n",
              "      <th>ClaimID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>No</td>\n",
              "      <td>Inpatient</td>\n",
              "      <td>17072</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>No</td>\n",
              "      <td>Outpatient</td>\n",
              "      <td>328343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Yes</td>\n",
              "      <td>Inpatient</td>\n",
              "      <td>23402</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Yes</td>\n",
              "      <td>Outpatient</td>\n",
              "      <td>189394</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  PotentialFraud  Claim_type  ClaimID\n",
              "0             No   Inpatient    17072\n",
              "1             No  Outpatient   328343\n",
              "2            Yes   Inpatient    23402\n",
              "3            Yes  Outpatient   189394"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aepHV2AY9068",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 112
        },
        "outputId": "8eb6acff-c4e7-43b8-a462-c4018f6f022b"
      },
      "source": [
        "groups = final_train.loc[final_train['ChronicCond_Alzheimer']==2].groupby(['PotentialFraud'], as_index=False)['ChronicCond_Alzheimer'].count()\n",
        "groups"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>No</td>\n",
              "      <td>207435</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Yes</td>\n",
              "      <td>126449</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  PotentialFraud  ChronicCond_Alzheimer\n",
              "0             No                 207435\n",
              "1            Yes                 126449"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rzq4Ey8uAYCq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 314
        },
        "outputId": "4763d8ea-e421-42d6-c9da-cda336544968"
      },
      "source": [
        "Alz = final_train.loc[final_train['ChronicCond_Alzheimer']==2].groupby(['Provider','PotentialFraud'], as_index=False)['ChronicCond_Alzheimer'].count()\n",
        "total=final_train.groupby(['Provider', 'PotentialFraud'], as_index=False)['ClaimID'].count()\n",
        "groups=pd.merge(Alz, total, on=['Provider','PotentialFraud'])\n",
        "groups=groups.groupby(['PotentialFraud'], as_index=False)[['ChronicCond_Alzheimer','ClaimID']].sum()\n",
        "groups['Alzheimer_per']=(groups['ChronicCond_Alzheimer']/groups['ClaimID'])*100\n",
        "ax=sns.barplot(x='PotentialFraud',y='Alzheimer_per', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Percentage of claims with Alzheimer\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Percentage of claims with Alzheimer'),\n",
              " Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Hz3Hu8Ge4FVG",
        "outputId": "d5782d6c-d2c6-4a67-ae54-a60ad99b67cd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 314
        }
      },
      "source": [
        "Dep = final_train.loc[final_train['ChronicCond_Depression']==2].groupby(['Provider','PotentialFraud'], as_index=False)['ChronicCond_Depression'].count()\n",
        "total=final_train.groupby(['Provider', 'PotentialFraud'], as_index=False)['ClaimID'].count()\n",
        "groups=pd.merge(Dep, total, on=['Provider','PotentialFraud'])\n",
        "groups=groups.groupby(['PotentialFraud'], as_index=False)[['ChronicCond_Depression','ClaimID']].sum()\n",
        "groups['Depression_per']=(groups['ChronicCond_Depression']/groups['ClaimID'])*100\n",
        "ax=sns.barplot(x='PotentialFraud',y='Depression_per', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Percentage of claims with Depression\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Percentage of claims with Depression'),\n",
              " Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 37
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ans37Rmr5xjy",
        "outputId": "9a348cc8-4293-48c7-b80c-e5f45d54b368",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 314
        }
      },
      "source": [
        "heart = final_train.loc[final_train['ChronicCond_Heartfailure']==2].groupby(['Provider','PotentialFraud'], as_index=False)['ChronicCond_Heartfailure'].count()\n",
        "total=final_train.groupby(['Provider', 'PotentialFraud'], as_index=False)['ClaimID'].count()\n",
        "groups=pd.merge(heart, total, on=['Provider','PotentialFraud'])\n",
        "groups=groups.groupby(['PotentialFraud'], as_index=False)[['ChronicCond_Heartfailure','ClaimID']].sum()\n",
        "groups['heartfailure_per']=(groups['ChronicCond_Heartfailure']/groups['ClaimID'])*100\n",
        "ax=sns.barplot(x='PotentialFraud',y='heartfailure_per', data=groups)\n",
        "ax.set(xlabel=\"Fraudulent or not\", ylabel = \"Percentage of claims with Heartfailure\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0, 0.5, 'Percentage of claims with Heartfailure'),\n",
              " Text(0.5, 0, 'Fraudulent or not')]"
            ]
          },
          "metadata": {},
          "execution_count": 38
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Number of claims between each provider and physician:**"
      ],
      "metadata": {
        "id": "cMk2sc4vOfSN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "groups = final_train.groupby(['Provider', 'PotentialFraud','AttendingPhysician'], as_index=False)['ClaimID'].count()\n",
        "groups"
      ],
      "metadata": {
        "id": "mVLQ8AXOHWF9",
        "outputId": "c67afacd-afff-4f66-851d-2101d7d4e02c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-99e735bc-b4ad-46d8-b13a-476155f80844\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>ClaimID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY311126</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY318842</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY340163</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY345302</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY346762</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87900</th>\n",
              "      <td>PRV57760</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY398330</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87901</th>\n",
              "      <td>PRV57761</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY354815</td>\n",
              "      <td>68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87902</th>\n",
              "      <td>PRV57761</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY367727</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87903</th>\n",
              "      <td>PRV57762</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY432730</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87904</th>\n",
              "      <td>PRV57763</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY321072</td>\n",
              "      <td>118</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>87905 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99e735bc-b4ad-46d8-b13a-476155f80844')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-99e735bc-b4ad-46d8-b13a-476155f80844 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-99e735bc-b4ad-46d8-b13a-476155f80844');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       Provider PotentialFraud AttendingPhysician  ClaimID\n",
              "0      PRV51001             No          PHY311126        1\n",
              "1      PRV51001             No          PHY318842        1\n",
              "2      PRV51001             No          PHY340163        1\n",
              "3      PRV51001             No          PHY345302        4\n",
              "4      PRV51001             No          PHY346762        1\n",
              "...         ...            ...                ...      ...\n",
              "87900  PRV57760             No          PHY398330        4\n",
              "87901  PRV57761             No          PHY354815       68\n",
              "87902  PRV57761             No          PHY367727       14\n",
              "87903  PRV57762             No          PHY432730        1\n",
              "87904  PRV57763             No          PHY321072      118\n",
              "\n",
              "[87905 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "groups.loc[groups['ClaimID']>700]"
      ],
      "metadata": {
        "id": "VB3bTUGSH6yW",
        "outputId": "895f0fb2-8b0e-4995-fafe-dc6817b9935c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 770
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-8b6323ba-569a-43ad-abd6-6a5a233efc42\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>ClaimID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2903</th>\n",
              "      <td>PRV51196</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY432614</td>\n",
              "      <td>716</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3084</th>\n",
              "      <td>PRV51244</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY318667</td>\n",
              "      <td>711</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5072</th>\n",
              "      <td>PRV51369</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY347064</td>\n",
              "      <td>1076</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5073</th>\n",
              "      <td>PRV51369</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY383481</td>\n",
              "      <td>1005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6804</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY314027</td>\n",
              "      <td>1200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6805</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY327046</td>\n",
              "      <td>1181</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6806</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY337425</td>\n",
              "      <td>1156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6807</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY338032</td>\n",
              "      <td>1158</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6808</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY341578</td>\n",
              "      <td>1133</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6809</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY357120</td>\n",
              "      <td>1156</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6810</th>\n",
              "      <td>PRV51459</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY423534</td>\n",
              "      <td>1223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9328</th>\n",
              "      <td>PRV51567</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY350277</td>\n",
              "      <td>1628</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9399</th>\n",
              "      <td>PRV51574</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY415321</td>\n",
              "      <td>1002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11176</th>\n",
              "      <td>PRV51836</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY433436</td>\n",
              "      <td>924</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24865</th>\n",
              "      <td>PRV52628</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY344389</td>\n",
              "      <td>1000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24866</th>\n",
              "      <td>PRV52628</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY432650</td>\n",
              "      <td>1093</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25223</th>\n",
              "      <td>PRV52652</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY357307</td>\n",
              "      <td>737</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34489</th>\n",
              "      <td>PRV53700</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY375943</td>\n",
              "      <td>912</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36815</th>\n",
              "      <td>PRV53797</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY387126</td>\n",
              "      <td>762</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36816</th>\n",
              "      <td>PRV53797</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY412132</td>\n",
              "      <td>1321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38492</th>\n",
              "      <td>PRV53918</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY330576</td>\n",
              "      <td>2534</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49697</th>\n",
              "      <td>PRV54813</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY351121</td>\n",
              "      <td>1053</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82355</th>\n",
              "      <td>PRV57306</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY375453</td>\n",
              "      <td>880</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b6323ba-569a-43ad-abd6-6a5a233efc42')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8b6323ba-569a-43ad-abd6-6a5a233efc42 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8b6323ba-569a-43ad-abd6-6a5a233efc42');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       Provider PotentialFraud AttendingPhysician  ClaimID\n",
              "2903   PRV51196             No          PHY432614      716\n",
              "3084   PRV51244            Yes          PHY318667      711\n",
              "5072   PRV51369            Yes          PHY347064     1076\n",
              "5073   PRV51369            Yes          PHY383481     1005\n",
              "6804   PRV51459            Yes          PHY314027     1200\n",
              "6805   PRV51459            Yes          PHY327046     1181\n",
              "6806   PRV51459            Yes          PHY337425     1156\n",
              "6807   PRV51459            Yes          PHY338032     1158\n",
              "6808   PRV51459            Yes          PHY341578     1133\n",
              "6809   PRV51459            Yes          PHY357120     1156\n",
              "6810   PRV51459            Yes          PHY423534     1223\n",
              "9328   PRV51567            Yes          PHY350277     1628\n",
              "9399   PRV51574            Yes          PHY415321     1002\n",
              "11176  PRV51836            Yes          PHY433436      924\n",
              "24865  PRV52628            Yes          PHY344389     1000\n",
              "24866  PRV52628            Yes          PHY432650     1093\n",
              "25223  PRV52652            Yes          PHY357307      737\n",
              "34489  PRV53700             No          PHY375943      912\n",
              "36815  PRV53797            Yes          PHY387126      762\n",
              "36816  PRV53797            Yes          PHY412132     1321\n",
              "38492  PRV53918            Yes          PHY330576     2534\n",
              "49697  PRV54813             No          PHY351121     1053\n",
              "82355  PRV57306            Yes          PHY375453      880"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Number of unique physicians for each provider:**"
      ],
      "metadata": {
        "id": "iX35oOzQOup5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "groups = final_train.groupby(['Provider', 'PotentialFraud'], as_index=False)['AttendingPhysician'].nunique()\n",
        "groups"
      ],
      "metadata": {
        "id": "HtztesbmW5V6",
        "outputId": "0132c890-13af-4d1f-a185-2348a65667df",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-e6a6df5e-07ca-4f61-b96a-03268ab6dcff\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>PRV51004</td>\n",
              "      <td>No</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PRV51005</td>\n",
              "      <td>Yes</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PRV51007</td>\n",
              "      <td>No</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5405</th>\n",
              "      <td>PRV57759</td>\n",
              "      <td>No</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5406</th>\n",
              "      <td>PRV57760</td>\n",
              "      <td>No</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5407</th>\n",
              "      <td>PRV57761</td>\n",
              "      <td>No</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5408</th>\n",
              "      <td>PRV57762</td>\n",
              "      <td>No</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5409</th>\n",
              "      <td>PRV57763</td>\n",
              "      <td>No</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5410 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e6a6df5e-07ca-4f61-b96a-03268ab6dcff')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e6a6df5e-07ca-4f61-b96a-03268ab6dcff button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e6a6df5e-07ca-4f61-b96a-03268ab6dcff');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      Provider PotentialFraud  AttendingPhysician\n",
              "0     PRV51001             No                  14\n",
              "1     PRV51003            Yes                  44\n",
              "2     PRV51004             No                  38\n",
              "3     PRV51005            Yes                   6\n",
              "4     PRV51007             No                  10\n",
              "...        ...            ...                 ...\n",
              "5405  PRV57759             No                   1\n",
              "5406  PRV57760             No                   3\n",
              "5407  PRV57761             No                   2\n",
              "5408  PRV57762             No                   1\n",
              "5409  PRV57763             No                   1\n",
              "\n",
              "[5410 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "groups.loc[groups['AttendingPhysician']>200]"
      ],
      "metadata": {
        "id": "8ifRENBVIa1M",
        "outputId": "2abb5453-c2f6-4d03-a372-05b3f499949b",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 614
        }
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-698ebf2d-b66f-43a6-b5a3-5467c5290226\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>426</th>\n",
              "      <td>PRV51539</td>\n",
              "      <td>Yes</td>\n",
              "      <td>241</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>458</th>\n",
              "      <td>PRV51578</td>\n",
              "      <td>Yes</td>\n",
              "      <td>231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>473</th>\n",
              "      <td>PRV51598</td>\n",
              "      <td>No</td>\n",
              "      <td>208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>818</th>\n",
              "      <td>PRV52019</td>\n",
              "      <td>Yes</td>\n",
              "      <td>643</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1281</th>\n",
              "      <td>PRV52589</td>\n",
              "      <td>Yes</td>\n",
              "      <td>205</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1606</th>\n",
              "      <td>PRV53000</td>\n",
              "      <td>No</td>\n",
              "      <td>260</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2236</th>\n",
              "      <td>PRV53781</td>\n",
              "      <td>Yes</td>\n",
              "      <td>223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2244</th>\n",
              "      <td>PRV53790</td>\n",
              "      <td>Yes</td>\n",
              "      <td>241</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2252</th>\n",
              "      <td>PRV53799</td>\n",
              "      <td>No</td>\n",
              "      <td>264</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2347</th>\n",
              "      <td>PRV53932</td>\n",
              "      <td>No</td>\n",
              "      <td>209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2464</th>\n",
              "      <td>PRV54070</td>\n",
              "      <td>Yes</td>\n",
              "      <td>255</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3148</th>\n",
              "      <td>PRV54939</td>\n",
              "      <td>Yes</td>\n",
              "      <td>239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3325</th>\n",
              "      <td>PRV55169</td>\n",
              "      <td>No</td>\n",
              "      <td>233</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3363</th>\n",
              "      <td>PRV55215</td>\n",
              "      <td>Yes</td>\n",
              "      <td>544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3597</th>\n",
              "      <td>PRV55510</td>\n",
              "      <td>No</td>\n",
              "      <td>418</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4211</th>\n",
              "      <td>PRV56268</td>\n",
              "      <td>Yes</td>\n",
              "      <td>299</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4353</th>\n",
              "      <td>PRV56444</td>\n",
              "      <td>Yes</td>\n",
              "      <td>249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4923</th>\n",
              "      <td>PRV57173</td>\n",
              "      <td>Yes</td>\n",
              "      <td>305</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-698ebf2d-b66f-43a6-b5a3-5467c5290226')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-698ebf2d-b66f-43a6-b5a3-5467c5290226 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-698ebf2d-b66f-43a6-b5a3-5467c5290226');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      Provider PotentialFraud  AttendingPhysician\n",
              "426   PRV51539            Yes                 241\n",
              "458   PRV51578            Yes                 231\n",
              "473   PRV51598             No                 208\n",
              "818   PRV52019            Yes                 643\n",
              "1281  PRV52589            Yes                 205\n",
              "1606  PRV53000             No                 260\n",
              "2236  PRV53781            Yes                 223\n",
              "2244  PRV53790            Yes                 241\n",
              "2252  PRV53799             No                 264\n",
              "2347  PRV53932             No                 209\n",
              "2464  PRV54070            Yes                 255\n",
              "3148  PRV54939            Yes                 239\n",
              "3325  PRV55169             No                 233\n",
              "3363  PRV55215            Yes                 544\n",
              "3597  PRV55510             No                 418\n",
              "4211  PRV56268            Yes                 299\n",
              "4353  PRV56444            Yes                 249\n",
              "4923  PRV57173            Yes                 305"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Physicians in common:**"
      ],
      "metadata": {
        "id": "CU2BmjPYO2b6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "p1=final_train.loc[final_train['Provider']=='PRV54070']\n",
        "p2=final_train.loc[final_train['Provider']=='PRV53781']"
      ],
      "metadata": {
        "id": "-tTUlWgSLDF0"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "p1[p1['AttendingPhysician'].isin(p2['AttendingPhysician'])]\n"
      ],
      "metadata": {
        "id": "oWajzQsXI61q",
        "outputId": "bc91fadc-8487-4a34-a4b6-5ded9ea055d9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 114
        }
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-13e6f492-602e-4ee0-803c-36b743a90aa1\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>BeneID</th>\n",
              "      <th>DOB</th>\n",
              "      <th>DOD</th>\n",
              "      <th>Gender</th>\n",
              "      <th>Race</th>\n",
              "      <th>RenalDiseaseIndicator</th>\n",
              "      <th>State</th>\n",
              "      <th>County</th>\n",
              "      <th>NoOfMonths_PartACov</th>\n",
              "      <th>NoOfMonths_PartBCov</th>\n",
              "      <th>ChronicCond_Alzheimer</th>\n",
              "      <th>ChronicCond_Heartfailure</th>\n",
              "      <th>ChronicCond_KidneyDisease</th>\n",
              "      <th>ChronicCond_Cancer</th>\n",
              "      <th>ChronicCond_ObstrPulmonary</th>\n",
              "      <th>ChronicCond_Depression</th>\n",
              "      <th>ChronicCond_Diabetes</th>\n",
              "      <th>ChronicCond_IschemicHeart</th>\n",
              "      <th>ChronicCond_Osteoporasis</th>\n",
              "      <th>ChronicCond_rheumatoidarthritis</th>\n",
              "      <th>ChronicCond_stroke</th>\n",
              "      <th>IPAnnualReimbursementAmt</th>\n",
              "      <th>IPAnnualDeductibleAmt</th>\n",
              "      <th>OPAnnualReimbursementAmt</th>\n",
              "      <th>OPAnnualDeductibleAmt</th>\n",
              "      <th>ClaimID</th>\n",
              "      <th>ClaimStartDt</th>\n",
              "      <th>ClaimEndDt</th>\n",
              "      <th>Provider</th>\n",
              "      <th>InscClaimAmtReimbursed</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>OperatingPhysician</th>\n",
              "      <th>OtherPhysician</th>\n",
              "      <th>AdmissionDt</th>\n",
              "      <th>ClmAdmitDiagnosisCode</th>\n",
              "      <th>DeductibleAmtPaid</th>\n",
              "      <th>DischargeDt</th>\n",
              "      <th>DiagnosisGroupCode</th>\n",
              "      <th>ClmDiagnosisCode_1</th>\n",
              "      <th>ClmDiagnosisCode_2</th>\n",
              "      <th>ClmDiagnosisCode_3</th>\n",
              "      <th>ClmDiagnosisCode_4</th>\n",
              "      <th>ClmDiagnosisCode_5</th>\n",
              "      <th>ClmDiagnosisCode_6</th>\n",
              "      <th>ClmDiagnosisCode_7</th>\n",
              "      <th>ClmDiagnosisCode_8</th>\n",
              "      <th>ClmDiagnosisCode_9</th>\n",
              "      <th>ClmDiagnosisCode_10</th>\n",
              "      <th>ClmProcedureCode_1</th>\n",
              "      <th>ClmProcedureCode_2</th>\n",
              "      <th>ClmProcedureCode_3</th>\n",
              "      <th>ClmProcedureCode_4</th>\n",
              "      <th>ClmProcedureCode_5</th>\n",
              "      <th>ClmProcedureCode_6</th>\n",
              "      <th>Claim_type</th>\n",
              "      <th>PotentialFraud</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13e6f492-602e-4ee0-803c-36b743a90aa1')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-13e6f492-602e-4ee0-803c-36b743a90aa1 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-13e6f492-602e-4ee0-803c-36b743a90aa1');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "Empty DataFrame\n",
              "Columns: [BeneID, DOB, DOD, Gender, Race, RenalDiseaseIndicator, State, County, NoOfMonths_PartACov, NoOfMonths_PartBCov, ChronicCond_Alzheimer, ChronicCond_Heartfailure, ChronicCond_KidneyDisease, ChronicCond_Cancer, ChronicCond_ObstrPulmonary, ChronicCond_Depression, ChronicCond_Diabetes, ChronicCond_IschemicHeart, ChronicCond_Osteoporasis, ChronicCond_rheumatoidarthritis, ChronicCond_stroke, IPAnnualReimbursementAmt, IPAnnualDeductibleAmt, OPAnnualReimbursementAmt, OPAnnualDeductibleAmt, ClaimID, ClaimStartDt, ClaimEndDt, Provider, InscClaimAmtReimbursed, AttendingPhysician, OperatingPhysician, OtherPhysician, AdmissionDt, ClmAdmitDiagnosisCode, DeductibleAmtPaid, DischargeDt, DiagnosisGroupCode, ClmDiagnosisCode_1, ClmDiagnosisCode_2, ClmDiagnosisCode_3, ClmDiagnosisCode_4, ClmDiagnosisCode_5, ClmDiagnosisCode_6, ClmDiagnosisCode_7, ClmDiagnosisCode_8, ClmDiagnosisCode_9, ClmDiagnosisCode_10, ClmProcedureCode_1, ClmProcedureCode_2, ClmProcedureCode_3, ClmProcedureCode_4, ClmProcedureCode_5, ClmProcedureCode_6, Claim_type, PotentialFraud]\n",
              "Index: []"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Beneficiaries**"
      ],
      "metadata": {
        "id": "udFdAjUQO6Hr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "groups = final_train.groupby(['Provider', 'PotentialFraud'], as_index=False)['BeneID'].nunique()\n",
        "groups"
      ],
      "metadata": {
        "id": "QbiggXXLPW_M",
        "outputId": "e1e95d2d-1570-40f5-b838-0ce667b90ce4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-9f3ab2d7-af3b-4948-a685-d81406ce0a15\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>BeneID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>PRV51004</td>\n",
              "      <td>No</td>\n",
              "      <td>138</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PRV51005</td>\n",
              "      <td>Yes</td>\n",
              "      <td>495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PRV51007</td>\n",
              "      <td>No</td>\n",
              "      <td>58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5405</th>\n",
              "      <td>PRV57759</td>\n",
              "      <td>No</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5406</th>\n",
              "      <td>PRV57760</td>\n",
              "      <td>No</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5407</th>\n",
              "      <td>PRV57761</td>\n",
              "      <td>No</td>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5408</th>\n",
              "      <td>PRV57762</td>\n",
              "      <td>No</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5409</th>\n",
              "      <td>PRV57763</td>\n",
              "      <td>No</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5410 rows × 3 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f3ab2d7-af3b-4948-a685-d81406ce0a15')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9f3ab2d7-af3b-4948-a685-d81406ce0a15 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9f3ab2d7-af3b-4948-a685-d81406ce0a15');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      Provider PotentialFraud  BeneID\n",
              "0     PRV51001             No      24\n",
              "1     PRV51003            Yes     117\n",
              "2     PRV51004             No     138\n",
              "3     PRV51005            Yes     495\n",
              "4     PRV51007             No      58\n",
              "...        ...            ...     ...\n",
              "5405  PRV57759             No      24\n",
              "5406  PRV57760             No       9\n",
              "5407  PRV57761             No      67\n",
              "5408  PRV57762             No       1\n",
              "5409  PRV57763             No      70\n",
              "\n",
              "[5410 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "groups = final_train.groupby(['Provider', 'PotentialFraud','AttendingPhysician'], as_index=False)['BeneID'].nunique()\n",
        "groups"
      ],
      "metadata": {
        "id": "slCHEQ_ZNI2c",
        "outputId": "93202fcc-c70a-4fdb-e455-dda1d6e58758",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-9b4075f5-4457-4be5-a666-b726fa5bee37\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>BeneID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY311126</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY318842</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY340163</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY345302</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PRV51001</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY346762</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87900</th>\n",
              "      <td>PRV57760</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY398330</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87901</th>\n",
              "      <td>PRV57761</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY354815</td>\n",
              "      <td>56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87902</th>\n",
              "      <td>PRV57761</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY367727</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87903</th>\n",
              "      <td>PRV57762</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY432730</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87904</th>\n",
              "      <td>PRV57763</td>\n",
              "      <td>No</td>\n",
              "      <td>PHY321072</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>87905 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b4075f5-4457-4be5-a666-b726fa5bee37')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-9b4075f5-4457-4be5-a666-b726fa5bee37 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-9b4075f5-4457-4be5-a666-b726fa5bee37');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       Provider PotentialFraud AttendingPhysician  BeneID\n",
              "0      PRV51001             No          PHY311126       1\n",
              "1      PRV51001             No          PHY318842       1\n",
              "2      PRV51001             No          PHY340163       1\n",
              "3      PRV51001             No          PHY345302       4\n",
              "4      PRV51001             No          PHY346762       1\n",
              "...         ...            ...                ...     ...\n",
              "87900  PRV57760             No          PHY398330       3\n",
              "87901  PRV57761             No          PHY354815      56\n",
              "87902  PRV57761             No          PHY367727      13\n",
              "87903  PRV57762             No          PHY432730       1\n",
              "87904  PRV57763             No          PHY321072      70\n",
              "\n",
              "[87905 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "groups.loc[groups['PotentialFraud']=='Yes']"
      ],
      "metadata": {
        "id": "KOuvPFncPLEL",
        "outputId": "0c987199-a582-4667-bdf8-0c57511eab0c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        }
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-cf59f524-4414-42f9-aa1b-316c7e8556e7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Provider</th>\n",
              "      <th>PotentialFraud</th>\n",
              "      <th>AttendingPhysician</th>\n",
              "      <th>BeneID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY313380</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY315660</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY321291</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY327121</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>PRV51003</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY330290</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87581</th>\n",
              "      <td>PRV57709</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY418520</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87582</th>\n",
              "      <td>PRV57709</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY422966</td>\n",
              "      <td>27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87583</th>\n",
              "      <td>PRV57709</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY424578</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87584</th>\n",
              "      <td>PRV57709</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY432078</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87585</th>\n",
              "      <td>PRV57709</td>\n",
              "      <td>Yes</td>\n",
              "      <td>PHY432934</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20804 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf59f524-4414-42f9-aa1b-316c7e8556e7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cf59f524-4414-42f9-aa1b-316c7e8556e7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cf59f524-4414-42f9-aa1b-316c7e8556e7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       Provider PotentialFraud AttendingPhysician  BeneID\n",
              "14     PRV51003            Yes          PHY313380       2\n",
              "15     PRV51003            Yes          PHY315660       1\n",
              "16     PRV51003            Yes          PHY321291       1\n",
              "17     PRV51003            Yes          PHY327121       3\n",
              "18     PRV51003            Yes          PHY330290       2\n",
              "...         ...            ...                ...     ...\n",
              "87581  PRV57709            Yes          PHY418520      12\n",
              "87582  PRV57709            Yes          PHY422966      27\n",
              "87583  PRV57709            Yes          PHY424578       1\n",
              "87584  PRV57709            Yes          PHY432078       1\n",
              "87585  PRV57709            Yes          PHY432934       7\n",
              "\n",
              "[20804 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ]
    }
  ]
}